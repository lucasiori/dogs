{"version":3,"sources":["components/User/UserStatsGraphs/style.module.css","components/User/UserStatsGraphs/index.js"],"names":["module","exports","UserStatsGraphs","data","useState","graph","setGraph","total","setTotal","useEffect","graphData","map","photo","x","title","y","Number","acessos","totalViews","reduce","a","b","className","styles","graphItem","innerRadius","padding","top","bottom","left","right","style","fillOpacity","stroke","strokeWidth","labels","fontSize","fill","lassName","alignment"],"mappings":"iFACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,UAAY,yBAAyB,MAAQ,uB,8GCuD7EC,UApDS,SAAC,GAAc,IAAZC,EAAW,EAAXA,KAAW,EACVC,mBAAS,IADC,mBAC7BC,EAD6B,KACtBC,EADsB,OAEVF,mBAAS,GAFC,mBAE7BG,EAF6B,KAEtBC,EAFsB,KAkBpC,OAdAC,qBAAU,WACR,IAAMC,EAAYP,EAAKQ,KAAI,SAACC,GAAD,MAAY,CACrCC,EAAGD,EAAME,MACTC,EAAGC,OAAOJ,EAAMK,aAGZC,EAAaf,EAChBQ,KAAI,SAACC,GAAD,OAAWI,OAAOJ,EAAMK,YAC5BE,QAAO,SAACC,EAAGC,GAAJ,OAAUD,EAAIC,IAAG,GAE3Bb,EAASU,GACTZ,EAASI,KACR,CAACP,IAGF,0BAASmB,UAAS,UAAKC,IAAOlB,MAAZ,cAAlB,UACE,qBAAKiB,UAAS,UAAKC,IAAOhB,MAAZ,YAAqBgB,IAAOC,WAA1C,SACE,0CAAajB,OAGf,qBAAKe,UAAWC,IAAOC,UAAvB,SACE,cAAC,IAAD,CACErB,KAAME,EACNoB,YAAa,GACbC,QAAS,CAAEC,IAAK,GAAIC,OAAQ,GAAIC,KAAM,GAAIC,MAAO,IACjDC,MAAO,CACL5B,KAAM,CACJ6B,YAAa,GACbC,OAAQ,OACRC,YAAa,GAEfC,OAAQ,CACNC,SAAU,GACVC,KAAM,aAMd,qBAAKC,SAAUf,IAAOC,UAAtB,SACE,cAAC,IAAD,UACE,cAAC,IAAD,CAAYrB,KAAME,EAAOkC,UAAU","file":"static/js/4.af3e3bf4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"graph\":\"style_graph__3d9d5\",\"graphItem\":\"style_graphItem__6MKEM\",\"total\":\"style_total__1mMHA\"};","import React, { useEffect, useState } from 'react';\nimport { VictoryPie, VictoryChart, VictoryBar } from 'victory';\nimport styles from './style.module.css';\n\nconst UserStatsGraphs = ({ data }) => {\n  const [graph, setGraph] = useState([]);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    const graphData = data.map((photo) => ({\n      x: photo.title,\n      y: Number(photo.acessos)\n    }));\n\n    const totalViews = data\n      .map((photo) => Number(photo.acessos))\n      .reduce((a, b) => a + b, 0);\n\n    setTotal(totalViews);\n    setGraph(graphData);\n  }, [data]);\n\n  return (\n    <section className={`${styles.graph} animeLeft`}>\n      <div className={`${styles.total} ${styles.graphItem}`}>\n        <p>Acessos: {total}</p>\n      </div>\n\n      <div className={styles.graphItem}>\n        <VictoryPie\n          data={graph}\n          innerRadius={50}\n          padding={{ top: 20, bottom: 20, left: 80, right: 80 }}\n          style={{\n            data: {\n              fillOpacity: 0.9,\n              stroke: '#fff',\n              strokeWidth: 2\n            },\n            labels: {\n              fontSize: 14,\n              fill: '#333'\n            }\n          }}\n        />\n      </div>\n\n      <div lassName={styles.graphItem}>\n        <VictoryChart>\n          <VictoryBar data={graph} alignment=\"start\" />\n        </VictoryChart>\n      </div>\n    </section>\n  );\n}\n\nexport default UserStatsGraphs;"],"sourceRoot":""}